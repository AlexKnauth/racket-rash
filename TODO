Main TODO items
---------------

* add access to all the features of run-pipeline from the line-based syntax
** redirections < > >! >>
* make $ read into some sort of transformer macro that can do different things
** $var should be variable reference, as it is
** $ALL_CAPS should be an environment variable reference
** $"string" (and better still, $«nestable «string»») should do glob expansion
*** {foo,bar}, *, expand environment vars, ... what other sorts of globs would be useful?
*** zsh has lots of really cool glob patterns that are impossible to remember.  What would be a good way to use them, but not have magic syntax and 1 character name nonsense?
*** globs produce lists of arguments, not just one, so I'll have to manage splicing them in somehow.
** $(normal racket here) should of course be normal racket
** are there other expansions that would be useful?
* it would be good to have racket lines on the first line, but the way they are parsed is bound up in how newline characters are parsed...

About interactive shells
------------------------

job control -- for an interactive shell, how should the shell capture references to the pipelines to do job control?

