language: c

# To use Travis CI's newer container infrastructure, use the following
# line. (Also be sure RACKET_DIR is set to somewhere like ~/racket
# that doesn't require sudo.)
sudo: false

env:
  global:
    # Supply a global RACKET_DIR environment variable. This is where
    # Racket will be installed. A good idea is to use ~/racket because
    # that doesn't require sudo to install and is therefore compatible
    # with Travis CI's newer container infrastructure.
    - RACKET_DIR=~/racket
  matrix:
    # Supply at least one RACKET_VERSION environment variable. This is
    # used by the install-racket.sh script (run at before_install,
    # below) to select the version of Racket to download and install.
    #
    # Supply more than one RACKET_VERSION (as in the example below) to
    # create a Travis-CI build matrix to test against multiple Racket
    # versions.
    #
    # The RELEASE snapshot is only available during the release process.
    - RACKET_VERSION=HEAD
    - RACKET_VERSION=HEADCS
    - RACKET_VERSION=6.12 # The earliest version Rash claims to support
    - RACKET_VERSION=7.1 # Current release version

# You may want to test against certain versions of Racket, without
# having them count against the overall success/failure.
matrix:
  allow_failures:
  # Fast finish: Overall build result is determined as soon as any of
  # its rows have failed, or, all of its rows that aren't allowed to
  # fail have succeeded.


before_install:
  - git clone https://github.com/greghendershott/travis-racket.git
  - cat travis-racket/install-racket.sh | bash # pipe to bash not sh!
  - export PATH="${RACKET_DIR}/bin:${PATH}" #install-racket.sh can't set for us

install:

before_script:

# Here supply steps such as raco make, raco test, etc.
script:
#  - raco make main.rkt
#  - raco test -x .
# OR: If your repo is a Racket package with an info.rkt that includes
# some `deps`:
 - raco pkg install --deps search-auto $TRAVIS_BUILD_DIR/linea
 - raco pkg install --deps search-auto $TRAVIS_BUILD_DIR/shell-pipeline
 - raco pkg install --deps search-auto $TRAVIS_BUILD_DIR/rash
 # This setup step probably isn't necessary, because pkg install does a setup.
 # But I'm not sure it does --check-pkg-deps.
 #- raco setup --check-pkg-deps --pkgs linea shell-pipeline rash
 - raco setup --check-pkg-deps
 - racket $TRAVIS_BUILD_DIR/run-all-tests

after_script:
